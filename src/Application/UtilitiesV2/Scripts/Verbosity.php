<?php
	declare(strict_types=1);

	namespace Framework\Application\UtilitiesV2\Scripts;

	use Framework\Application\UtilitiesV2\Container;
	use Framework\Application\UtilitiesV2\Scripts;
	use Framework\Application\UtilitiesV2\Debug;

	/**
	 * Class Verbosity
	 *
	 * Automatically created at: 2019-05-30 13:35:15
	 * @package Framework\Application\UtilitiesV2\Scripts
	 */

	class Verbosity extends Base
	{

	    /**
	     * The logic of your script goes in this function.
	     *
	     * @param $arguments
	     * @return bool
	     */

	    public function execute($arguments)
	    {

	    	if( Container::exist('scripts') == false )
	    		throw new \Error("Scripts global class does not exist");

		    /**
		     * @var Scripts $scripts
		     */
	    	$scripts = Container::get('scripts');
	    	$arguments = array_keys( $arguments );

	    	if( isset( $arguments[0] ) == false )
	    		Debug::echo("Please enter an integer value above 0");
	    	elseif( is_int( $arguments[0] ) == false )
			    Debug::echo("Please enter an value above 0");
	    	else
		    {

			    $scripts->verbosity( abs( $arguments[0] ) );
			    Debug::echo("Verbosity set to " . abs( @$arguments[0] ) );
		    }

	        return parent::execute($arguments); // TODO: Change the autogenerated stub
	    }

	    /**
	     * The help index can either be a string or an array containing a set of strings. You can only put strings in
	     * there.
	     *
	     * @return array
	     */

	    public function help()
	    {
	        return([
	            "arguments" => $this->requiredArguments(),
	            "help" => "Hello World"
	        ]);
	    }

	    /**
	     * Example:
	     *  [
	     *      "file"
	     *      "name"
	     *  ]
	     *
	     *  View from the console:
	     *      Verbosity file=myfile.php name=no_space
	     *
	     * @return array|null
	     */

	    public function requiredArguments()
	    {

	        return parent::requiredArguments();
	    }
	}