<?php
/**
 * Created by PhpStorm.
 * User: newsy
 * Date: 08/05/2019
 * Time: 19:56
 */

namespace Framework\Tests;

use Framework\Syscrack\Game\Tool;

class ToolTest extends BaseTestCase
{

    /**
     * @var Tool
     */

    protected static $tool;


    public static function setUpBeforeClass(): void
    {

        if( isset( self::$tool ) == false )
            self::$tool = new Tool();

        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
    }

    public function testHasRequirements()
    {

        self::$tool->isConnected();
        $this->assertTrue( self::$tool->hasRequirements() );

    }

    public function testIsComputerType()
    {

        self::$tool->isComputerType('market');
        $this->assertEquals('market', self::$tool->getRequirements()['type'] );
    }

    public function testGetInputs()
    {

        self::$tool->addInput('accountnumber', 'text');
        $this->assertNotEmpty( self::$tool->getInputs() );
    }

    public function testIsConnected()
    {

        self::$tool->isConnected();
        $this->assertEquals(true, self::$tool->getRequirements()['connected'] );
    }

    public function testHasSoftwareInstalled()
    {

        self::$tool->hasSoftwareInstalled('cracker');
        $this->assertEquals('cracker', self::$tool->getRequirements()['software'] );
    }

    public function testHasInputs()
    {

        self::$tool->addInput('test', 'text');
        $this->assertTrue( self::$tool->hasInputs() );
    }

    public function testAddInput()
    {


        self::$tool->addInput('test', 'text');
        $this->assertArrayHasKey('test', self::$tool->getInputs() );
    }

    public function testGetRequirements()
    {

        $this->assertNotEmpty( self::$tool->getRequirements() );
    }
}
