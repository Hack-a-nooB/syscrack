<?php
	declare(strict_types=1);
	/**
	 * Created by PhpStorm.
	 * User: newsy
	 * Date: 08/05/2019
	 * Time: 19:56
	 */

	namespace Framework\Tests;

	use Framework\Syscrack\Game\Tool;

	/**
	 * Class ToolTest
	 * @package Framework\Tests
	 */
	class ToolTest extends BaseTestCase
	{

		/**
		 * @var Tool
		 */

		protected static $tool;


		public static function setUpBeforeClass(): void
		{

			if (isset(self::$tool) == false)
				self::$tool = new Tool();

			parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
		}

		public function testHasRequirements()
		{

			self::$tool->isConnected();
			static::assertTrue(self::$tool->hasRequirements());

		}

		public function testIsComputerType()
		{

			self::$tool->isComputerType('market');
			static::assertEquals('market', self::$tool->getRequirements()['type']);
		}

		public function testGetInputs()
		{

			self::$tool->addInput('accountnumber', 'text');
			static::assertNotEmpty(self::$tool->getInputs());
		}

		public function testIsConnected()
		{

			self::$tool->isConnected();
			static::assertEquals(true, self::$tool->getRequirements()['connected']);
		}

		public function testHasSoftwareInstalled()
		{

			self::$tool->hasSoftwareInstalled('cracker');
			static::assertEquals('cracker', self::$tool->getRequirements()['software']);
		}

		public function testHasInputs()
		{

			self::$tool->addInput('test', 'text');
			static::assertTrue(self::$tool->hasInputs());
		}

		public function testAddInput()
		{


			self::$tool->addInput('test', 'text');
			static::assertArrayHasKey('test', self::$tool->getInputs());
		}

		public function testGetRequirements()
		{

			static::assertNotEmpty(self::$tool->getRequirements());
		}
	}
