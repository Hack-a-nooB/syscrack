<?php
	declare(strict_types=1);
	/**
	 * Created by PhpStorm.
	 * User: newsy
	 * Date: 15/05/2019
	 * Time: 01:37
	 */

	namespace Framework\Tests;

	use Framework\Syscrack\Game\Inventory;

	/**
	 * Class InventoryTest
	 * @package Framework\Tests
	 */
	class InventoryTest extends BaseTestCase
	{

		/**
		 * @var Inventory
		 */

		protected static $inventory;
		protected static $userid;
		protected static $itemid;

		public static function setUpBeforeClass(): void
		{

			if( isset( self::$inventory ) == false )
				self::$inventory = new Inventory();

			self::$userid = 1005;

			parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
		}

		public static function tearDownAfterClass(): void
		{

			self::$inventory->wipe( self::$userid );

			parent::tearDownAfterClass(); // TODO: Change the autogenerated stub
		}

		public function testAdd()
		{

			$itemid = self::$inventory->add('colours', self::$userid );

			static::assertNotEmpty( $itemid );
			static::assertIsInt( $itemid );
			self::$itemid = $itemid;
		}

		public function testLast()
		{

			static::assertNotEmpty( self::$inventory->last() );
		}

		public function testFind()
		{

			$result = self::$inventory->find( self::$itemid, self::$userid );

			static::assertNotEmpty( $result );
			static::assertIsObject( $result );
		}

		public function testGet()
		{

			$result = self::$inventory->get( self::$userid );

			static::assertNotEmpty( $result );
			static::assertIsObject( $result );
		}

		public function testHas()
		{

			static::assertTrue( self::$inventory->exists( self::$itemid, self::$userid ) );
		}


		public function testDelete()
		{

			$result = self::$inventory->delete( self::$itemid, self::$userid );
			static::assertNotEmpty( $result );
			self::$inventory->save( self::$userid, $result );
			static::assertFalse( self::$inventory->exists( self::$itemid, self::$userid ) );
		}
	}
