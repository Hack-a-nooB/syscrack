<?php
	/**
	 * Created by PhpStorm.
	 * User: newsy
	 * Date: 20/06/2019
	 * Time: 20:40
	 */

	namespace Framework\Tests;

	use Framework\Application;
	use Framework\Application\UtilitiesV2\Moddable;
	use Framework\Syscrack\Game\ModLoader;

	class ModdableTest extends BaseTestCase
	{

		/**
		 * @var Moddable
		 */

		protected static $moddable;

		public static function setUpBeforeClass(): void
		{

			if( isset( self::$moddable ) == false )
				self::$moddable = new Moddable( Application::globals()->CONTROLLER_FILEPATH, Application::globals()->CONTROLLER_NAMESPACE );

			parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
		}

		public function testIterate()
		{

			$result = self::$moddable->iterate( self::$moddable->classes(), function( $class )
			{

				if( class_exists( $class ) == false )
					throw new \Error("Class does not exist: " . $class );

				forward_static_call( $class . "::setup");

				$class = new $class;
				$routes = $class->mapping();

				if( empty( $routes ) )
					throw new \Error("Empty roots");

				foreach ( $routes as $route)
				{

					if (method_exists( $class, $route[1]) == false)
						throw new \Error('Method does not exist in class: ' . $route[0] . " => " . $route[1]);

					\Flight::route($route[0], [$class, $route[1]]);
				}

				return true;
			});

			self::assertTrue( $result );
		}

		public function testExist()
		{

			self::assertTrue( self::$moddable->exist("Index") );
			self::assertTrue( self::$moddable->exist("ModTest") );
		}
	}
