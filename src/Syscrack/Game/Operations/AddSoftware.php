<?php
	declare(strict_types=1); //Created at 2019-06-23 20:26:37 by 20636

	namespace Framework\Syscrack\Game\Operations;

	use Framework\Application;
	use Framework\Syscrack\Game\Bases\BaseOperation;
	use Framework\Syscrack\Game\Tab;

	/**
	 * Class AddSoftware
	 * @package Framework\Syscrack\Game\Operations
	 */
	class AddSoftware extends BaseOperation
	{

		/**
		 * @var Application\UtilitiesV2\Request
		 */

		protected static $request;

		/**
		 * @return array
		 */

		public function configuration()
		{

			return [
				'allowsoftware' => false,
				'allowlocal' => false,
				'requiresoftware' => false,
				'requireloggedin' => false,
				'allowpost' => true,
				'allowcustomdata' => true,
				'postrequirements' => [
					'softwaretypes'
				]
			];
		}

		public function __construct(bool $createclasses = true) { self::$request = new Application\UtilitiesV2\Request(); parent::__construct($createclasses); }

		/**
		 * @param $timecompleted
		 * @param $computerid
		 * @param $userid
		 * @param $process
		 * @param array $data
		 *
		 * @return bool
		 */

		public function onCreation($timecompleted, $computerid, $userid, $process, array $data)
		{

			if( self::$user->isAdmin( $userid ) == false )
				return false;

			if( empty( $data["custom"] ) )
				return false;
			elseif( isset( $data["custom"]["type"] ) == false )
				return false;

			return parent::onCreation($timecompleted, $computerid, $userid, $process, $data); // TODO: Change the autogenerated stub
		}

		/**
		 * @param $timecompleted
		 * @param $timestarted
		 * @param $computerid
		 * @param $userid
		 * @param $process
		 * @param array $data
		 *
		 * @return bool|null|string
		 */

		public function onCompletion($timecompleted, $timestarted, $computerid, $userid, $process, array $data)
		{

			/**
			 * Put your code here
			 */

			if( self::$user->isAdmin( $userid ) == false )
				return false;

			if( empty( $data["custom"] ) )
				return false;
			elseif( isset( $data["custom"]["type"] ) == false )
				return false;

			$tab = $this->getTab( $data["custom"]["type"] );

			if( $tab === null )
				$this->formError("Tab does not exist which normally means this software doesnt exist");
			else
			{

				if( parent::onCompletion(
						$timecompleted,
						$timestarted,
						$computerid,
						$userid,
						$process,
						$data) == false )
					return false;
				else
					$this->render('operations/operations.addsoftware',
						["tab" => $tab->get(), 'type' => $data["custom"]["type"] ], true, true);

				return null;
			}
		}

		/**
		 * @param $ipaddress
		 * @param $userid
		 *
		 * @return array
		 */

		public function getCustomData($ipaddress, $userid)
		{

			if( self::$user->isAdmin( $userid ) == false )
				return [];

			$data = [];

			if( isset( self::$request->softwaretypes ) == false )
				return [];
			else
			{

				$string = self::$request->softwaretypes;
				Application\UtilitiesV2\Format::filter( $string );
				$data['type'] = $string;
			}

			return ( array_merge( parent::getCustomData($ipaddress, $userid), $data ) );
		}

		/**
		 * @param $type
		 *
		 * @return null|Tab
		 */

		public function getTab( $type )
		{

			$tabs = self::$software->tabs();

			foreach( $tabs as $key=>$tab )
				if( strtolower( $key ) == strtolower( $type ) )
					return( $tab );

			return null;
		}
	}