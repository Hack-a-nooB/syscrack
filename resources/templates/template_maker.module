<?php

	namespace _namespace_;

	/**
	 * Class _classname_
	 *
	 * Automatically created at: _time_
	 * @package _namespace_
	 */

	use Framework\Application\UtilitiesV2\Conventions\FileData;
	use Framework\Application\UtilitiesV2\FileOperator;
	use Framework\Application\UtilitiesV2\Conventions\TokenData;

	class _classname_ extends Base
	{

		/**
		 * @param FileData|null $template
		 */

		public function before(FileData $template = null): void
		{

			if ($template == null)
				$template = FileOperator::pathDataInstance("resources/templates/template_" . strtolower("_classname_" ) . ".module");

			parent::before($template);
		}

		/**
		 * @param TokenData $values
		 * @param $path
		 *
		 * @return FileData
		 */

		public function make(TokenData $values, $path): FileData
		{

			/**
			 * the TokenData class holds the values which we will be inserting into our template. It also holds key information
			 * like the class name.
			 *
			 * $values->arrayValue("values", "classname") //Class Name
			 * $values->arrayValue("values", "time") //Current Time
			 * $values->arrayValue("values", "namespace") //Namespace
			 */

			return parent::make($values, $path); // TODO: Change the autogenerated stub
		}

		/**
		 * @return string
		 */

		public function filepath(): string
		{

			return( parent::filepath() );
		}

		/**
		 * @return string
		 */

		public function namespace(): string
		{

			return( parent::namespace() );
		}
	}